name: bookstore
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # A Flutter plugin for finding commonly used locations on the filesystem.
  path_provider: ^2.0.1
  # A comprehensive, cross-platform path manipulation library for Dart.
  path: ^1.8.0-nullsafety.1
  # A simple Service Locator.
  get_it: ^7.1.3
  # BLoC Design Pattern (Business Logic Component)
  bloc: ^7.0.0
  # Widgets that make it easy to integrate blocs and cubits into Flutter.
  flutter_bloc: ^7.0.0
  # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^2.0.5
  # Introduction/Onboarding package for flutter app with some customizations possibilities.
  introduction_screen: ^2.1.0
  # A package provides an easy way to add shimmer effect in Flutter project.
  shimmer: ^2.0.0
  # A widget provided to the flutter scroll component drop-down refresh and pull up load.
  pull_to_refresh: ^2.0.0
  # An abstract class that helps to implement equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.0
  # Flutter library to load and cache network images. Can also be used with placeholder and error widgets.
  cached_network_image: ^3.0.0
  # Provides APIs for debugging and error logging.
  logging: ^1.0.1
  # A Markdown renderer for Flutter.
  flutter_markdown: ^0.6.2
  # Dart implementation of sprintf.
  sprintf: ^6.0.0
  # A network request plugin
  dio: ^4.0.0
  # Network connectivity discovery plugin
  connectivity: ^3.0.3
  # FLoating nav
  floating_navbar: ^2.0.1
  # Gap
  gap: ^2.0.0
  # Rating Bar
  flutter_rating_bar: ^4.0.0
  # Fake data generator
  faker: ^2.0.0
  # Local authentication plugin
  local_auth: ^1.1.6

  # For Analyzer
  effective_dart: ^1.3.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Poppins
      fonts:
        - asset: assets/fonts/Poppins-Black.ttf
        - asset: assets/fonts/Poppins-BlackItalic.ttf
        - asset: assets/fonts/Poppins-Bold.ttf
        - asset: assets/fonts/Poppins-BoldItalic.ttf
        - asset: assets/fonts/Poppins-Italic.ttf
        - asset: assets/fonts/Poppins-Light.ttf
        - asset: assets/fonts/Poppins-LightItalic.ttf
        - asset: assets/fonts/Poppins-Medium.ttf
        - asset: assets/fonts/Poppins-MediumItalic.ttf
        - asset: assets/fonts/Poppins-Regular.ttf
        - asset: assets/fonts/Poppins-Thin.ttf
        - asset: assets/fonts/Poppins-ThinItalic.ttf
    - family: halter
      fonts:
        - asset: assets/fonts/halter.ttf
    - family: credit-card
      fonts:
        - asset: assets/fonts/credit-card.ttf

flutter_intl:
  enabled: true # Required. Must be set to true to activate the plugin. Default: false
  class_name: L10n # Optional. Sets the name for the generated localization class. Default: S
  main_locale: en # Optional. Sets the main locale used for generating localization files. Provided value should consist of language code and optional script and country codes separated with underscore (e.g. 'en', 'en_GB', 'zh_Hans', 'zh_Hans_CN'). Default: en
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
